apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "k8s-namespace-sync.fullname" . }}
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "k8s-namespace-sync.labels" . | nindent 4 }}
    control-plane: controller-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "k8s-namespace-sync.selectorLabels" . | nindent 6 }}
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "k8s-namespace-sync.selectorLabels" . | nindent 8 }}
        control-plane: controller-manager
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "k8s-namespace-sync.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: manager
        args:
        - --metrics-bind-address={{ .Values.controller.metrics.bindAddress }}
        - --health-probe-bind-address={{ .Values.controller.health.bindAddress }}
        {{- if .Values.controller.leaderElection.enabled }}
        - --leader-elect=true
        {{- end }}
        - --zap-devel={{ .Values.controller.logging.development }}
        - --zap-log-level={{ .Values.controller.logging.level }}
        - --zap-encoder={{ .Values.controller.logging.encoder }}
        - --zap-stacktrace-level={{ .Values.controller.logging.stacktraceLevel }}
        command:
        - /manager
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        livenessProbe:
          httpGet:
            path: {{ .Values.probes.liveness.path }}
            port: {{ .Values.probes.liveness.port }}
          initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds }}
          periodSeconds: {{ .Values.probes.liveness.periodSeconds }}
        readinessProbe:
          httpGet:
            path: {{ .Values.probes.readiness.path }}
            port: {{ .Values.probes.readiness.port }}
          initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds }}
          periodSeconds: {{ .Values.probes.readiness.periodSeconds }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
      terminationGracePeriodSeconds: 10
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}