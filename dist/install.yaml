apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: k8s-namespace-sync
    control-plane: controller-manager
  name: k8s-namespace-sync-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.4
  name: namespacesyncs.sync.nsync.dev
spec:
  group: sync.nsync.dev
  names:
    kind: NamespaceSync
    listKind: NamespaceSyncList
    plural: namespacesyncs
    singular: namespacesync
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.sourceNamespace
      name: Source
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Status
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].message
      name: Message
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: NamespaceSync is the Schema for the namespacesyncs API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: NamespaceSyncSpec defines the desired state of NamespaceSync
            properties:
              configMapName:
                description: ConfigMapName is the name of the configmap to be synced
                type: string
              exclude:
                description: Exclude is a list of namespaces to exclude from synchronization
                items:
                  type: string
                type: array
              secretName:
                description: SecretName is the name of the secret to be synced
                type: string
              sourceNamespace:
                description: SourceNamespace is the namespace containing the resources
                  to be synced
                type: string
            required:
            - sourceNamespace
            type: object
          status:
            description: NamespaceSyncStatus defines the observed state of NamespaceSync
            properties:
              conditions:
                description: Conditions represent the latest available observations
                  of an object's state
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              failedNamespaces:
                additionalProperties:
                  type: string
                description: FailedNamespaces maps namespace names to error messages
                  for failed syncs
                type: object
              lastSyncTime:
                description: LastSyncTime is the last time the sync was performed
                format: date-time
                type: string
              observedGeneration:
                description: ObservedGeneration represents the .metadata.generation
                  that the condition was set based upon
                format: int64
                type: integer
              syncedNamespaces:
                description: SyncedNamespaces is a list of namespaces that were successfully
                  synced
                items:
                  type: string
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: k8s-namespace-sync
  name: k8s-namespace-sync-controller-manager
  namespace: k8s-namespace-sync-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: k8s-namespace-sync
  name: k8s-namespace-sync-leader-election-role
  namespace: k8s-namespace-sync-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: k8s-namespace-sync-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - sync.nsync.dev
  resources:
  - namespacesyncs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - sync.nsync.dev
  resources:
  - namespacesyncs/finalizers
  verbs:
  - update
- apiGroups:
  - sync.nsync.dev
  resources:
  - namespacesyncs/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: k8s-namespace-sync-metrics-auth-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: k8s-namespace-sync-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: k8s-namespace-sync
  name: k8s-namespace-sync-namespacesync-editor-role
rules:
- apiGroups:
  - sync.nsync.dev
  resources:
  - namespacesyncs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - sync.nsync.dev
  resources:
  - namespacesyncs/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: k8s-namespace-sync
  name: k8s-namespace-sync-namespacesync-viewer-role
rules:
- apiGroups:
  - sync.nsync.dev
  resources:
  - namespacesyncs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - sync.nsync.dev
  resources:
  - namespacesyncs/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: k8s-namespace-sync
  name: k8s-namespace-sync-leader-election-rolebinding
  namespace: k8s-namespace-sync-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: k8s-namespace-sync-leader-election-role
subjects:
- kind: ServiceAccount
  name: controller-manager
  namespace: system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: k8s-namespace-sync
  name: k8s-namespace-sync-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: k8s-namespace-sync-manager-role
subjects:
- kind: ServiceAccount
  name: k8s-namespace-sync-controller-manager
  namespace: k8s-namespace-sync-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: k8s-namespace-sync-metrics-auth-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: k8s-namespace-sync-metrics-auth-role
subjects:
- kind: ServiceAccount
  name: controller-manager
  namespace: system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: k8s-namespace-sync
    control-plane: controller-manager
  name: k8s-namespace-sync-controller-manager-metrics-service
  namespace: k8s-namespace-sync-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: 8443
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: k8s-namespace-sync
    control-plane: controller-manager
  name: k8s-namespace-sync-controller-manager
  namespace: k8s-namespace-sync-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --metrics-bind-address=:8443
        - --leader-elect=true
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --zap-devel=true
        - --zap-log-level=debug
        - --zap-encoder=console
        - --zap-stacktrace-level=error
        command:
        - /manager
        image: somaz940/k8s-namespace-sync:v0.1.1
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: k8s-namespace-sync-controller-manager
      terminationGracePeriodSeconds: 10
